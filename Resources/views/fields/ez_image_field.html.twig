{# This field accepts the following parameters:
 #   - parameters:
 #      - alias         (string)        Defaults to "original" (e.g. image originally uploaded)
 #      - srcset        (array)         
 #      - class         (string)        Allows setting CSS custom class name for the figure element
 #      - width         (int|string)    Allows forcing width of the image in the HTML
 #      - height        (int|string)    Allows forcing height of the image in the HTML
 #      - exact         (bool)          Allows forcing height and width of the 'alias' to the figure element
 #      - caption       (string)        Allows adding a caption to the figure element
 #      - alt           (string)        Allows adding an alternative text on img elements
 #      - link          (object)        Allows setting a link on the figure element
 #          - href      (string)
 #          - title     (string)
 #          - target    (string)
 #}

{% block ezimage_field %}
{% apply spaceless %}
    {% if not ez_field_is_empty( content, field ) %}
        {% set data_srcset = [] %}
        {% set exact_fit = parameters.exact ?? parameters.width ?? parameters.height ?? false %}
        {% set image_alias = ez_image_alias( field, versionInfo, parameters.alias ?? 'original' ) %}
        {% set placeholder = ez_image_alias( field, versionInfo, 'ez_progressive_placeholder' ) %}
        {% set src = image_alias ? asset( image_alias.uri ) : '//:0' %}
        {% set attributes = {
            class: "ez-progressive #{attr.class ?? ''} #{parameters.class ?? ''}" | trim,
            style: "height: #{parameters.height ?? image_alias.height}px; width: #{parameters.width ?? image_alias.width}px",
        } %}

        {% for alias, matcher in parameters.srcset|default({}) %}
            {% set tmp_alias = ez_image_alias( field, versionInfo, alias ) %}
            {% set tmp_src = tmp_alias ? asset( tmp_alias.uri )|replace({' ': '%20'}) : '//:0' %}
            {% set data_srcset = data_srcset | merge(["#{tmp_src} #{matcher}"]) %}
        {% endfor %}

        <figure class="{{ attributes.class | e('html_attr') }}" style="{{ exact_fit ? attributes.style | e('html_attr') : 'height: ' ~Â parameters.height ?? image_alias.height ~ 'px;'}}">
            {% if parameters.link ?? {} is not empty %}
            <a
                    href="{{ parameters.link.href ?? '//:0' }}"
                    {% if parameters.link.title is defined %} title="{{ parameters.link.title }}"{% endif %}
                    {% if parameters.link.target is defined %} target="{{ parameters.link.target }}"{% endif %}
                    {% if parameters.link.target is defined and parameters.link.target == '_blank' %} rel="noreferrer noopener"{% endif %}
            >
                {% endif %}

                <img
                        class="ez-progressive-placeholder"
                        style="height: {{parameters.height ?? image_alias.height}}px;"
                        src="{{- 'data:' ~ placeholder.mimeType ~ ';base64,' ~ placeholder.info -}}"
                        alt="{{ parameters.alt ?? field.value.alternativeText }}"
                />
                <img
                        class="ez-progressive-image lazyload"
                        data-src="{{ image_alias.uri|replace({' ': '%20'}) }}"
                        {% if data_srcset is not empty %}data-srcset="{{ data_srcset|join(', ') }}"{% endif %}
                        {% if parameters.sizes is defined %}data-sizes="{{ parameters.sizes }}"{% endif %}
                        alt="{{ parameters.alt ?? field.value.alternativeText }}"
                        onload="this.style.opacity = 1;this.previousElementSibling.style.opacity = 0;this.parentElement.style.height = 'auto';"
                />

                {% if parameters.caption ?? '' %}
                    <figcaption >{{ parameters.caption | raw }}</figcaption>
                {% endif %}


                {% if parameters.link ?? {} is not empty %}
            </a>
            {% endif %}
        </figure>
    {% endif %}
{% endapply %}
{% endblock %}
